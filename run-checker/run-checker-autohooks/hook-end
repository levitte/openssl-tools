#! /bin/bash

here=$(cd $(dirname $0); pwd)
rcd=$here/.run-checker-data

REPORT_RECIPIENT=
REPORT_FROM=
if [ -f $rcd/new/hook-config ]; then
    . $rcd/new/hook-config
fi

builddir=$1
newstatus=$2

# Created by hook-start
optdir="$rcd/builds/$builddir"
curoptdir="$optdir/cur"
newoptdir="$optdir/new"

if (
    set -e

    echo $newstatus > "$newoptdir/status"
    cp "./$builddir/build.log" "$newoptdir/build.log"

    # Compress the hell out of the build
    tar --remove-files -cJf "./$builddir.tar.xz" "./$builddir"

    curstatus=$(if [ -f "$curoptdir/status" ]; then
                    cat "$curoptdir/status"
                else
                    # If it was never built previously, pretend the previous
                    # build passed
                    echo pass
                fi)
    gitbranch=$(cat $rcd/new/branch)
    expandedopts=$(cat "$newoptdir/options")

    # If the build failed or the status changed since last time, report
    if [ "$newstatus" == "fail" -o "$newstatus" != "$curstatus" ]; then
	if [ -n "$REPORT_FROM" -a -n "$REPORT_RECIPIENT" ]; then
            (
		statusword=FAILED
		if [ "$newstatus" == "pass" ]; then
                    statusword=SUCCESSFUL
		elif [ "$curstatus" == "fail" ]; then
                    statusword="Still FAILED"
		fi
		echo "From: $REPORT_FROM"
		echo "To: $REPORT_RECIPIENT"
		echo "Subject: $statusword build of OpenSSL branch $gitbranch with options $expandedopts"
		cat <<EOF

Platform and configuration command:

EOF
		echo "\$ uname -a"
		uname -a
		head -1 "$newoptdir/build.log"
		if [ -f $rcd/new/rc-force-build ]; then
                    cat <<EOF

Forced build, latest commit is:

EOF
		else
                    cat <<EOF

Commit log since last time:

EOF
		fi
		cat "$newoptdir/log"
		if [ "$newstatus" == "fail" ]; then
		    cat <<EOF

Build log ended with (last 100 lines):

EOF
		    tail -100 "$newoptdir/build.log"
		fi
            ) | /usr/lib/sendmail -it
	fi
    fi

    if [ -d "$curoptdir" ]; then
        mv "$curoptdir" "$curoptdir.old.$$"
    fi
    mv "$newoptdir" "$curoptdir"
    if [ -d "$curoptdir.old.$$" ]; then
        rm -rf "$curoptdir.old.$$"
    fi
); then
    exit 0
fi

# Something went wrong.  Clear away $newoptdir and let the next run do
# this again
rm -rf "$newoptdir"
exit 1
